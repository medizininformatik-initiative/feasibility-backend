server:
  port: 8090
spring:
  application:
    name: codex-feasibility-gui-backend
  datasource:
    url: jdbc:postgresql://${FEASIBILITY_DATABASE_HOST:localhost}:${FEASIBILITY_DATABASE_PORT:5432}/codex_ui
    username: ${FEASIBILITY_DATABASE_USER:codex-postgres}
    password: ${FEASIBILITY_DATABASE_PASSWORD:codex-password}
    driverClassName: org.postgresql.Driver
  jpa:
    database: POSTGRESQL
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect=com:
          jackis:
            jsonintegration:
              hibernate: CustomPostgreSQL95Dialect
management:
  endpoints:
    enabled-by-default: false
  endpoint:
    health:
      enabled: true



app:
  # AKTIN or DSF or MOCK or DIRECT
  ontologyFolder: ${ONTOLOGY_FILES_FOLDER_UI:ontology/ui_profiles}
  mappingsFile: ${MAPPINGS_FILE:ontology/codex-term-code-mapping.json}
  conceptTreeFile: ${CONCEPT_TREE_FILE:ontology/codex-code-tree.json}
  fhirTranslationEnabled: ${FHIR_TRANSLATE_ENABLED:false}
  cqlTranslationEnabled: ${CQL_TRANSLATE_ENABLED:true}
  apiBaseUrl: ${API_BASE_URL:}
  enableQueryValidation: ${QUERY_VALIDATION_ENABLED:true}
  broker:
    mock:
      enabled: ${BROKER_CLIENT_MOCK_ENABLED:false}
    direct:
      enabled: ${BROKER_CLIENT_DIRECT_ENABLED:false}
    aktin:
      enabled: ${BROKER_CLIENT_AKTIN_ENABLED:false}
      broker:
        baseUrl: ${AKTIN_BROKER_BASE_URL}
        apiKey: ${AKTIN_BROKER_API_KEY}
    dsf:
      enabled: ${BROKER_CLIENT_DSF_ENABLED:false}
      security:
        certificate: ${DSF_SECURITY_CACERT}
        keystore:
          p12file: ${DSF_SECURITY_KEYSTORE_P12FILE}
          password: ${DSF_SECURITY_KEYSTORE_PASSWORD}
      proxy:
        host: ${DSF_PROXY_HOST:}
        username: ${DSF_PROXY_USERNAME:}
        password: ${DSF_PROXY_PASSWORD:}
      webservice:
        baseUrl: ${DSF_WEBSERVICE_BASE_URL}
        readTimeout: 20000
        connectTimeout: 2000
      websocket:
        url: ${DSF_WEBSOCKET_URL}
      organizationId: ${DSF_ORGANIZATION_ID}
  flare:
    baseUrl: ${FLARE_WEBSERVICE_BASE_URL:http://localhost:5000}
    readTimeout: 20000
    connectTimeout: 2000


keycloak:
  enabled: ${KEYCLOAK_ENABLED:true}
  cors: true
  cors-exposed-headers: Location
  bearer-only: true
  auth-server-url: ${KEYCLOAK_BASE_URL:http://localhost:8080}/auth
  realm: ${KEYCLOAK_REALM:codex-develop}
  ssl-required: external
  resource: ${KEYCLOAK_CLIENT_ID:feasibility-gui}
  security-constraints:
  - auth-roles:
    - ${KEYCLOAK_ALLOWED_ROLE:CODEX_USER}
    security-collections:
    - name: "Secured endpoints"
      patterns:
      - "/api/*"

logging:
  level:
    de.numcodex: ${LOG_LEVEL:warn}
    org.springframework.web: ${LOG_LEVEL:warn}

cors:
  allowedOrigins: ${ALLOWED_ORIGINS:http://localhost}


